1. 스킬트리
    1) 스킬 하나씩을 배열에 저장
        "CBD" -> [C, B, D]
    2)  스킬 트리 순회
        스킬 트리의 원소마다 스킬 배열에 있는 스킬들의 인덱스를 검색
        만약 먼저 검색한 스킬의 인덱스보다 뒤에 검색한 스킬의 인덱스가 더 작으면 스킬 사용 불가 !!
        (선행스킬이 더 나중에 쓰인다는 이야기 이니까)
        스킬이 굳이 다 쓰일 필요는 없기 때문에 이것도 고려해서 조건문 사용
            "CBD"일 때, "CB"만 사용해도 가능 !
        사용가능한 스킬의 개수 세서 리턴

2. 기능개발
    1) 작업마다 기능을 수행하는데 몇 일이 필요한지 계산해서 배열에 저장
    2) 변수하나 선언 후, 배열[0]의 값 저장
    3) 배열 순회하면서 변수에 저장된 값보다 배열의 값이 작으면 배포수++
    4) 그렇지 않으면 결과배열에 배포수 저장해주고 배포수 = 0, 변수 = 배열의 값

3. 주식가격
    1) 이중 for문
        for(int i = 0 ; i < prices.length - 1 ; i++)
            for(int j = i + 1 ; j < prices.length ; j++)
        만약 prices[i]가 prices[j]보다 작거나 같으면 count[i]++
        아니면 count[i]++한 뒤 break 해서 포문 하나 나가기
            (주식 가격이 떨어졌다는 뜻이기 때문에 !!)

4. 프린터
    1) 우선순위가 포함된 리스트 하나, 그 리스트를 정렬한 리스트 하나 생성 (리스트의 최대값 구하기 위해)
    2) 우선순위 리스트가 비어있지 않을 때
        만약 우선순위 리스트[0]이 리스트의 최대값과 다르면 값 삭제후 맨뒤에 다시 추가
        그리고 location--
        만약 최대값이랑 같다면 우선순위 리스트에서 값 삭제, 정렬 리스트에서 값 삭제
            프린터 카운트++, location--
        location == 0이고 리스트[0]이 최댓값과 같을 때까지 카운트값 계산
    3) 카운트값 리턴

